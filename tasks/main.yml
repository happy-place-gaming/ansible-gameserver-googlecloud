- name: create disk ({{ instance_disk_size }} GB) for {{ game }}
  gcp_compute_disk:
    name: "disk-{{ game }}-{{ discord_voice_channel_id }}"
    size_gb: "{{ instance_disk_size }}"
    source_image: "projects/ubuntu-os-cloud/global/images/family/ubuntu-1804-lts"
    zone: "{{ gcp_zone }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    scopes:
      - https://www.googleapis.com/auth/compute
    state: present
  register: disk

- name: create a network
  gcp_compute_network:
    name: "default"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    scopes:
      - https://www.googleapis.com/auth/compute
    state: present
  register: network
  
- name: create a instance "{{ game }}-{{ discord_voice_channel_id }}" size {{ machine_type }}
  gcp_compute_instance:
    state: present
    deletion_protection: false
    name: "{{ game }}-{{ discord_voice_channel_id }}"
    machine_type: "{{ machine_type }}"
    disks:
      - auto_delete: true
        boot: true
        source: "{{ disk }}"
    network_interfaces:
      - network: "{{ network }}"
        access_configs:
        - name: External NAT
          type: ONE_TO_ONE_NAT
    zone: "{{ gcp_zone }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    tags:
      fingerprint: "ssh-server{{ game }}-server"
      items:
        - ssh-server
        - "{{ game }}-server"
    scopes:
      - https://www.googleapis.com/auth/compute
    status: RUNNING
  register: instance

- debug:
    msg: "{{ instance.networkInterfaces }}"

# - name: Add tags to instance
#   community.google.gce_tag:
#     instance_name: "{{ game }}-{{ discord_voice_channel_id }}"
#     tags: ssh-server,{{ game }}-server,test-server
#     zone: "{{ gcp_zone }}"
#     state: present

- name: ensure firewall rule is created (ssh-server)
  gcp_compute_firewall:
    name: allow-ssh
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    allowed:
      - ip_protocol: tcp
        ports:
          - "22"
    target_tags:
      - ssh-server
    state: present

- name: ensure firewall rule is created ({{ game }}-server)
  gcp_compute_firewall:
    name: allow-{{ game }}
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    allowed: "{{ game_firewall_config }}"
    target_tags:
      - "{{ game }}-server"
    state: present

- name: Wait for SSH to come up {{ instance.networkInterfaces[0].accessConfigs[0].natIP }}
  wait_for:
    host: "{{ instance.networkInterfaces[0].accessConfigs[0].natIP }}"
    port: 22
    delay: 10
    timeout: 60

- name: Add host to groupname
  add_host:
    hostname: "{{ instance.networkInterfaces[0].accessConfigs[0].natIP }}"
    groupname: "{{ game }}_{{ discord_voice_channel_id }}_hosts"
